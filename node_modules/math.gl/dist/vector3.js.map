{"version":3,"sources":["../src/vector3.js"],"names":["validateVector3","ORIGIN","v","Number","isFinite","length","Vector3","x","y","z","Array","isArray","copy","set","check","vector","vectors","scale","radians","origin","operation","args","value"],"mappings":"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","file":"vector3.js","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './vector';\nimport {checkNumber} from './common';\n\n// gl-matrix is too big. Cherry-pick individual imports from stack.gl version\n/* eslint-disable camelcase */\nimport vec3_set from 'gl-vec3/set';\nimport vec3_angle from 'gl-vec3/angle';\nimport vec3_add from 'gl-vec3/add';\nimport vec3_subtract from 'gl-vec3/subtract';\nimport vec3_multiply from 'gl-vec3/multiply';\nimport vec3_divide from 'gl-vec3/divide';\nimport vec3_scale from 'gl-vec3/scale';\nimport vec3_scaleAndAdd from 'gl-vec3/scaleAndAdd';\nimport vec3_cross from 'gl-vec3/cross';\nimport vec3_rotateX from 'gl-vec3/rotateX';\nimport vec3_rotateY from 'gl-vec3/rotateY';\nimport vec3_rotateZ from 'gl-vec3/rotateZ';\n\nconst ORIGIN = [0, 0, 0];\n\nexport function validateVector3(v) {\n  return v.length === 3 &&\n    Number.isFinite(v[0]) && Number.isFinite(v[1]) && Number.isFinite(v[2]);\n}\n\nexport default class Vector3 extends Vector {\n  // Creates a new vec3, either empty, or from an array or from values\n  constructor(x = 0, y = 0, z = 0) {\n    super();\n    if (Array.isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      this.set(x, y, z);\n    }\n  }\n\n  set(x, y, z) {\n    vec3_set(this, x, y, z);\n    return this.check();\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() { return 3; }\n  get x()      { return this[0]; }\n  set x(value) { return this[0] = checkNumber(value); }\n  get y()      { return this[1]; }\n  set y(value) { return this[1] = checkNumber(value); }\n  get z()      { return this[2]; }\n  set z(value) { return this[2] = checkNumber(value); }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  angle(vector) {\n    return vec3_angle(this, vector);\n  }\n\n  // MODIFIERS\n\n  add(...vectors) {\n    for (const vector of vectors) {\n      vec3_add(this, this, vector);\n    }\n    return this.check();\n  }\n\n  subtract(...vectors) {\n    for (const vector of vectors) {\n      vec3_subtract(this, this, vector);\n    }\n    return this.check();\n  }\n\n  multiply(...vectors) {\n    for (const vector of vectors) {\n      vec3_multiply(this, this, vector);\n    }\n    return this.check();\n  }\n\n  scale(scale) {\n    if (Number.isFinite(scale)) {\n      vec3_scale(this, this, scale);\n    } else {\n      vec3_multiply(this, this, scale);\n    }\n    return this.check();\n  }\n\n  cross(vector) {\n    vec3_cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({radians, origin = ORIGIN}) {\n    vec3_rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({radians, origin = ORIGIN}) {\n    vec3_rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({radians, origin = ORIGIN}) {\n    vec3_rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  operation(operation, ...args) {\n    operation(this, this, ...args);\n    return this.check();\n  }\n\n  // TBD - do we really need these?\n  divide(...vectors) {\n    for (const vector of vectors) {\n      vec3_divide(this, this, vector);\n    }\n    return this.check();\n  }\n\n  scaleAndAdd(vector, scale) {\n    vec3_scaleAndAdd(this, this, vector, scale);\n    return this.check();\n  }\n}\n"]}