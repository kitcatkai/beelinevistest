{"version":3,"sources":["../src/vector4.js"],"names":["Vector","checkNumber","vec4_set","vec4_distance","vec4_add","vec4_subtract","vec4_multiply","vec4_divide","vec4_scale","vec4_scaleAndAdd","vec4_negate","vec4_inverse","vec4_normalize","vec4_dot","vec4_lerp","validateVector4","v","Number","isFinite","length","Vector4","x","y","z","w","Array","isArray","copy","set","check","vector","vectors","scale","coeff","value"],"mappings":"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","file":"vector4.js","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './vector';\nimport {checkNumber} from './common';\n\n// gl-matrix is too big. Cherry-pick individual imports from stack.gl version\n/* eslint-disable camelcase */\nimport vec4_set from 'gl-vec4/set';\nimport vec4_distance from 'gl-vec4/distance';\nimport vec4_add from 'gl-vec4/add';\nimport vec4_subtract from 'gl-vec4/subtract';\nimport vec4_multiply from 'gl-vec4/multiply';\nimport vec4_divide from 'gl-vec4/divide';\nimport vec4_scale from 'gl-vec4/scale';\nimport vec4_scaleAndAdd from 'gl-vec4/scaleAndAdd';\nimport vec4_negate from 'gl-vec4/negate';\nimport vec4_inverse from 'gl-vec4/inverse';\nimport vec4_normalize from 'gl-vec4/normalize';\nimport vec4_dot from 'gl-vec4/dot';\n// import vec4_cross from 'gl-vec4/cross';\nimport vec4_lerp from 'gl-vec4/lerp';\n\nexport function validateVector4(v) {\n  return v.length === 4 &&\n    Number.isFinite(v[0]) && Number.isFinite(v[1]) &&\n    Number.isFinite(v[2]) && Number.isFinite(v[3]);\n}\n\nexport default class Vector4 extends Vector {\n  // Creates a new, empty vec4\n  constructor(x = 0, y = 0, z = 0, w = 0) {\n    super();\n    if (Array.isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      this.set(x, y, z, w);\n    }\n  }\n\n  set(x, y, z, w) {\n    vec4_set(this, x, y, z, w);\n    this.check();\n    return this;\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() { return 4; }\n  get x()      { return this[0]; }\n  set x(value) { return this[0] = checkNumber(value); }\n  get y()      { return this[1]; }\n  set y(value) { return this[1] = checkNumber(value); }\n  get z()      { return this[2]; }\n  set z(value) { return this[2] = checkNumber(value); }\n  get w()      { return this[3]; }\n  set w(value) { return this[3] = checkNumber(value); }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  distance(vector) {\n    return vec4_distance(vector);\n  }\n\n  add(...vectors) {\n    for (const vector of vectors) {\n      vec4_add(this, this, vector);\n    }\n    this.check();\n    return this;\n  }\n\n  subtract(...vectors) {\n    for (const vector of vectors) {\n      vec4_subtract(this, this, vector);\n    }\n    this.check();\n    return this;\n  }\n\n  multiply(...vectors) {\n    for (const vector of vectors) {\n      vec4_multiply(this, this, vector);\n    }\n    this.check();\n    return this;\n  }\n\n  divide(...vectors) {\n    for (const vector of vectors) {\n      vec4_divide(this, this, vector);\n    }\n    this.check();\n    return this;\n  }\n\n  scale(scale) {\n    vec4_scale(this, this, scale);\n    this.check();\n    return this;\n  }\n\n  scaleAndAdd(vector, scale) {\n    vec4_scaleAndAdd(this, this, vector, scale);\n    this.check();\n    return this;\n  }\n\n  negate() {\n    vec4_negate(this, this);\n    this.check();\n    return this;\n  }\n\n  inverse() {\n    vec4_inverse(this, this);\n    this.check();\n    return this;\n  }\n\n  normalize() {\n    vec4_normalize(this, this);\n    this.check();\n    return this;\n  }\n\n  dot(vector) {\n    return vec4_dot(this, vector);\n  }\n\n  // cross(scale) {\n  //   vec4_cross(this, this, scale);\n  //   this.check();\n  //   return this;\n  // }\n\n  lerp(vector, coeff) {\n    vec4_lerp(this, this, vector, coeff);\n    this.check();\n    return this;\n  }\n\n  /*\n  multiply(...vectors) {\n    for (const vector of vectors) {\n      vec4_multiply(this, vector);\n    }\n    this.check();\n    return this;\n  }\n\n  divide(...vectors) {\n    for (const vector of vectors) {\n      vec4_divide(this, vector);\n    }\n    this.check();\n    return this;\n  }\n\n  ceil() {\n    vec4_ceil(this, this);\n    this.check();\n    return this;\n  }\n\n  floor() {\n    vec4_floor(this, this);\n    this.check();\n    return this;\n  }\n\n  min() {\n    vec4_min(this, this);\n    this.check();\n    return this;\n  }\n\n  max() {\n    vec4_max(this, this);\n    this.check();\n    return this;\n  }\n\n  hermite(scale) {\n    vec4_hermite(this, this, scale);\n    this.check();\n    return this;\n  }\n\n  bezier(scale) {\n    vec4_bezier(this, this, scale);\n    this.check();\n    return this;\n  }\n\n  random(scale) {\n    vec4_random(this, this, scale);\n    this.check();\n    return this;\n  }\n\n  rotateX(origin, angle) {\n    vec4_rotateX(this, this, origin, angle);\n    this.check();\n    return this;\n  }\n\n  rotateY(origin, angle) {\n    vec4_rotateY(this, this, origin, angle);\n    this.check();\n    return this;\n  }\n\n  rotateZ(origin, angle) {\n    vec4_rotateZ(this, this, origin, angle);\n    this.check();\n    return this;\n  }\n  */\n}\n"]}