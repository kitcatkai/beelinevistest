{"version":3,"sources":["../src/euler.js"],"names":["MathArray","checkNumber","clamp","Matrix4","Quaternion","Vector3","ERR_UNKNOWN_ORDER","ALMOST_ONE","validateOrder","value","checkOrder","Error","Euler","x","y","z","order","DefaultOrder","length","Array","isArray","arguments","fromVector3","set","Number","isFinite","RotationOrders","ZYX","array","i","check","offset","optionalResult","v","roll","pitch","yaw","q","_fromRotationMatrix","fromQuaternion","m","_getRotationMatrix","XYZ","rotateX","rotateY","rotateZ","YXZ","ZXY","YZX","XZY","Math","atan2","abs","asin","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","sin","cos","a","c","e","b","d","f","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd"],"mappings":"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","file":"euler.js","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport MathArray from './math-array';\nimport {checkNumber, clamp} from './common';\nimport Matrix4 from './matrix4';\nimport Quaternion from './quaternion';\nimport Vector3 from './vector3';\n\n// Internal constants\nconst ERR_UNKNOWN_ORDER = 'Unknown Euler angle order';\nconst ALMOST_ONE = 0.99999;\n\nfunction validateOrder(value) {\n  return (value >= 0 && value < 6);\n}\n\nfunction checkOrder(value) {\n  if (value < 0 && value >= 6) {\n    throw new Error(ERR_UNKNOWN_ORDER);\n  }\n  return value;\n}\n\nexport default class Euler extends MathArray {\n\n  // static XYZ = 0;\n  // static YZX = 1;\n  // static ZXY = 2;\n  // static XZY = 3;\n  // static YXZ = 4;\n  // static ZYX = 5;\n  // static RollPitchYaw = 0;\n  // static DefaultOrder = 0;\n\n  // Constants\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  static get ZYX() { return 0; }\n  static get YXZ() { return 1; }\n  static get XZY() { return 2; }\n  static get ZXY() { return 3; }\n  static get YZX() { return 4; }\n  static get XYZ() { return 5; }\n  static get RollPitchYaw() { return 0; }\n\n  static get DefaultOrder() { return Euler.ZYX; }\n  static get RotationOrders() {\n    return ['ZYX', 'YXZ', 'XZY', 'ZXY', 'YZX', 'XYZ'];\n  }\n  static rotationOrder(order) { return Euler.RotationOrders[order]; }\n\n  get ELEMENTS() { return 4; }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  /*\n   * Number|Number[], Number, Number, Number\n   */\n  constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\n    super();\n    if (arguments.length > 0 && Array.isArray(arguments[0])) {\n      this.fromVector3(...arguments);\n    } else {\n      this.set(x, y, z, order);\n    }\n  }\n\n  // If copied array does contain fourth element, preserves currently set order\n  copy(array) {\n    for (let i = 0; i < 3; ++i) {\n      this[i] = array[i];\n    }\n    this[3] = Number.isFinite(array[3]) || this.order;\n    this.check();\n    return this;\n  }\n\n  // Sets the three angles, and optionally sets the rotation order\n  // If order is not specified, preserves currently set order\n  set(x = 0, y = 0, z = 0, order) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = Number.isFinite(order) ? order : this[3];\n    this.check();\n    return this;\n  }\n\n  validate() {\n    return validateOrder(this[3]) &&\n      Number.isFinite(this[0]) &&\n      Number.isFinite(this[1]) &&\n      Number.isFinite(this[2]);\n  }\n\n  // Does not copy the orientation element\n  toArray(array = [], offset = 0) {\n    array[offset] = this[0];\n    array[offset + 1] = this[1];\n    array[offset + 2] = this[2];\n    return array;\n  }\n\n  // Copies the orientation element\n  toArray4(array = [], offset = 0) {\n    array[offset] = this[0];\n    array[offset + 1] = this[1];\n    array[offset + 2] = this[2];\n    array[offset + 3] = this[3];\n    return array;\n  }\n\n  toVector3(optionalResult) {\n    if (optionalResult) {\n      return optionalResult.set(this[0], this[1], this[2]);\n    }\n    return new Vector3(this[0], this[1], this[2]);\n  }\n\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  // x, y, z angle notation (note: only corresponds to axis in XYZ orientation)\n  get x()      { return this[0]; }\n  set x(value) { return this[0] = checkNumber(value); }\n  get y()      { return this[1]; }\n  set y(value) { return this[1] = checkNumber(value); }\n  get z()      { return this[2]; }\n  set z(value) { return this[2] = checkNumber(value); }\n\n  // alpha, beta, gamma angle notation\n  get alpha()      { return this[0]; }\n  set alpha(value) { return this[0] = checkNumber(value); }\n  get beta()       { return this[1]; }\n  set beta(value)  { return this[1] = checkNumber(value); }\n  get gamma()      { return this[2]; }\n  set gamma(value) { return this[2] = checkNumber(value); }\n\n  // phi, theta, psi angle notation\n  get phi()        { return this[0]; }\n  set phi(value)   { return this[0] = checkNumber(value); }\n  get theta()      { return this[1]; }\n  set theta(value) { return this[1] = checkNumber(value); }\n  get psi()        { return this[2]; }\n  set psi(value)   { return this[2] = checkNumber(value); }\n\n  // roll, pitch, yaw angle notation\n  get roll()       { return this[0]; }\n  set roll(value)  { return this[0] = checkNumber(value); }\n  get pitch()      { return this[1]; }\n  set pitch(value) { return this[1] = checkNumber(value); }\n  get yaw()        { return this[2]; }\n  set yaw(value)   { return this[2] = checkNumber(value); }\n\n  // rotation order, in all three angle notations\n  get order()      { return this[3]; }\n  set order(value) { return this[3] = checkOrder(value); }\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n\n  // Constructors\n  fromVector3(v, order) {\n    return this.set(v[0], v[1], v[2], Number.isFinite(order) ? order : this[3]);\n  }\n\n  // TODO - with and without 4th element\n  fromArray(array, offset = 0) {\n    this[0] = array[0 + offset];\n    this[1] = array[1 + offset];\n    this[2] = array[2 + offset];\n    if (array[3] !== undefined) {\n      this[3] = array[3];\n    }\n    this.check();\n    return this;\n  }\n\n  // Common ZYX rotation order\n  fromRollPitchYaw(roll, pitch, yaw) {\n    return this.set(roll, pitch, yaw, Euler.ZYX);\n  }\n\n  fromQuaternion(q, order) {\n    this._fromRotationMatrix(Matrix4.fromQuaternion(q), order);\n    this.check();\n    return this;\n  }\n\n  fromRotationMatrix(m, order = Euler.DefaultOrder) {\n    this._fromRotationMatrix(m, order);\n    this.check();\n    return this;\n  }\n\n  // ACCESSORS\n\n  // @return {Matrix4} a rotation matrix corresponding to rotations\n  //   per the specified euler angles\n  getRotationMatrix(m = new Matrix4()) {\n    this._getRotationMatrix(m);\n    return m;\n  }\n\n  getQuaternion() {\n    const q = new Quaternion();\n    switch (this[4]) {\n    case Euler.XYZ:\n      return q.rotateX(this[0]).rotateY(this[1]).rotateZ(this[2]);\n    case Euler.YXZ:\n      return q.rotateY(this[0]).rotateX(this[1]).rotateZ(this[2]);\n    case Euler.ZXY:\n      return q.rotateZ(this[0]).rotateX(this[1]).rotateY(this[2]);\n    case Euler.ZYX:\n      return q.rotateZ(this[0]).rotateY(this[1]).rotateX(this[2]);\n    case Euler.YZX:\n      return q.rotateY(this[0]).rotateZ(this[1]).rotateX(this[2]);\n    case Euler.XZY:\n      return q.rotateX(this[0]).rotateZ(this[1]).rotateY(this[2]);\n    default:\n      throw new Error(ERR_UNKNOWN_ORDER);\n    }\n  }\n\n  // INTERNAL METHODS\n\n  // Concersion from Euler to rotation matrix and from matrix to Euler\n  // Adapted from three.js under MIT license\n\n  // // WARNING: this discards revolution information -bhouston\n  // reorder(newOrder) {\n  //   const q = new Quaternion().setFromEuler(this);\n  //   return this.setFromQuaternion(q, newOrder);\n\n  /* eslint-disable complexity, max-statements, one-var */\n  _fromRotationMatrix(m, order = Euler.DefaultOrder) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    const te = m.elements;\n    const m11 = te[0], m12 = te[4], m13 = te[8];\n    const m21 = te[1], m22 = te[5], m23 = te[9];\n    const m31 = te[2], m32 = te[6], m33 = te[10];\n\n    order = order || this[3];\n\n    switch (order) {\n    case Euler.XYZ:\n      this[1] = Math.asin(clamp(m13, -1, 1));\n\n      if (Math.abs(m13) < ALMOST_ONE) {\n        this[0] = Math.atan2(-m23, m33);\n        this[2] = Math.atan2(-m12, m11);\n      } else {\n        this[0] = Math.atan2(m32, m22);\n        this[2] = 0;\n      }\n      break;\n\n    case Euler.YXZ:\n      this[0] = Math.asin(-clamp(m23, -1, 1));\n\n      if (Math.abs(m23) < ALMOST_ONE) {\n        this[1] = Math.atan2(m13, m33);\n        this[2] = Math.atan2(m21, m22);\n      } else {\n        this[1] = Math.atan2(-m31, m11);\n        this[2] = 0;\n      }\n      break;\n\n    case Euler.ZXY:\n      this[0] = Math.asin(clamp(m32, -1, 1));\n\n      if (Math.abs(m32) < ALMOST_ONE) {\n        this[1] = Math.atan2(-m31, m33);\n        this[2] = Math.atan2(-m12, m22);\n      } else {\n        this[1] = 0;\n        this[2] = Math.atan2(m21, m11);\n      }\n      break;\n\n    case Euler.ZYX:\n      this[1] = Math.asin(-clamp(m31, -1, 1));\n\n      if (Math.abs(m31) < ALMOST_ONE) {\n        this[0] = Math.atan2(m32, m33);\n        this[2] = Math.atan2(m21, m11);\n      } else {\n        this[0] = 0;\n        this[2] = Math.atan2(-m12, m22);\n      }\n      break;\n\n    case Euler.YZX:\n      this[2] = Math.asin(clamp(m21, -1, 1));\n\n      if (Math.abs(m21) < ALMOST_ONE) {\n        this[0] = Math.atan2(-m23, m22);\n        this[1] = Math.atan2(-m31, m11);\n      } else {\n        this[0] = 0;\n        this[1] = Math.atan2(m13, m33);\n      }\n      break;\n\n    case Euler.XZY:\n      this[2] = Math.asin(-clamp(m12, -1, 1));\n\n      if (Math.abs(m12) < ALMOST_ONE) {\n        this[0] = Math.atan2(m32, m22);\n        this[1] = Math.atan2(m13, m11);\n      } else {\n        this[0] = Math.atan2(-m23, m33);\n        this[1] = 0;\n      }\n      break;\n\n    default:\n      throw new Error(ERR_UNKNOWN_ORDER);\n    }\n\n    this[3] = order;\n\n    return this;\n  }\n\n  _getRotationMatrix() {\n    const te = new Matrix4();\n\n    const x = this.x, y = this.y, z = this.z;\n    const a = Math.cos(x);\n    const c = Math.cos(y);\n    const e = Math.cos(z);\n    const b = Math.sin(x);\n    const d = Math.sin(y);\n    const f = Math.sin(z);\n\n    switch (this[3]) {\n    case Euler.XYZ: {\n      const ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n      te[0] = c * e;\n      te[4] = -c * f;\n      te[8] = d;\n\n      te[1] = af + be * d;\n      te[5] = ae - bf * d;\n      te[9] = -b * c;\n\n      te[2] = bf - ae * d;\n      te[6] = be + af * d;\n      te[10] = a * c;\n      break;\n    }\n\n    case Euler.YXZ: {\n      const ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n      te[0] = ce + df * b;\n      te[4] = de * b - cf;\n      te[8] = a * d;\n\n      te[1] = a * f;\n      te[5] = a * e;\n      te[9] = -b;\n\n      te[2] = cf * b - de;\n      te[6] = df + ce * b;\n      te[10] = a * c;\n      break;\n    }\n\n    case Euler.ZXY: {\n      const ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n      te[0] = ce - df * b;\n      te[4] = -a * f;\n      te[8] = de + cf * b;\n\n      te[1] = cf + de * b;\n      te[5] = a * e;\n      te[9] = df - ce * b;\n\n      te[2] = -a * d;\n      te[6] = b;\n      te[10] = a * c;\n      break;\n    }\n\n    case Euler.ZYX: {\n      const ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n      te[0] = c * e;\n      te[4] = be * d - af;\n      te[8] = ae * d + bf;\n\n      te[1] = c * f;\n      te[5] = bf * d + ae;\n      te[9] = af * d - be;\n\n      te[2] = -d;\n      te[6] = b * c;\n      te[10] = a * c;\n      break;\n    }\n\n    case Euler.YZX: {\n      const ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n      te[0] = c * e;\n      te[4] = bd - ac * f;\n      te[8] = bc * f + ad;\n\n      te[1] = f;\n      te[5] = a * e;\n      te[9] = -b * e;\n\n      te[2] = -d * e;\n      te[6] = ad * f + bc;\n      te[10] = ac - bd * f;\n      break;\n    }\n\n    case Euler.XZY: {\n      const ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n      te[0] = c * e;\n      te[4] = -f;\n      te[8] = d * e;\n\n      te[1] = ac * f + bd;\n      te[5] = a * e;\n      te[9] = ad * f - bc;\n\n      te[2] = bc * f - ad;\n      te[6] = b * e;\n      te[10] = bd * f + ac;\n      break;\n    }\n\n    default:\n      throw new Error(ERR_UNKNOWN_ORDER);\n    }\n\n    // last column\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n\n    // bottom row\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n\n    return this;\n  }\n  /* eslint-enable complexity, max-statements, one-var */\n}\n"]}