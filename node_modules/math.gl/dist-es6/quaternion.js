var _createClass=function(){function defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,'value'in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError('Cannot call a class as a function')}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return call&&('object'==typeof call||'function'==typeof call)?call:self}function _inherits(subClass,superClass){if('function'!=typeof superClass&&null!==superClass)throw new TypeError('Super expression must either be null or a function, not '+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}import MathArray from'./math-array';import{checkNumber}from'./common';import quat_fromMat3 from'gl-quat/fromMat3';import quat_identity from'gl-quat/identity';import quat_length from'gl-quat/length';import quat_squaredLength from'gl-quat/squaredLength';import quat_dot from'gl-quat/dot';import quat_rotationTo from'gl-quat/rotationTo';import quat_add from'gl-quat/add';import quat_calculateW from'gl-quat/calculateW';import quat_conjugate from'gl-quat/conjugate';import quat_invert from'gl-quat/invert';import quat_lerp from'gl-quat/lerp';import quat_multiply from'gl-quat/multiply';import quat_normalize from'gl-quat/normalize';import quat_rotateX from'gl-quat/rotateX';import quat_rotateY from'gl-quat/rotateY';import quat_rotateZ from'gl-quat/rotateZ';import quat_scale from'gl-quat/scale';import quat_set from'gl-quat/set';import quat_setAxisAngle from'gl-quat/setAxisAngle';import quat_slerp from'gl-quat/slerp';var IDENTITY_QUATERNION=[0,0,0,1];export function validateQuaternion(q){var _NumberisFinite=Number.isFinite;return 4===q.length&&_NumberisFinite(q[0])&&_NumberisFinite(q[1])&&_NumberisFinite(q[2])&&_NumberisFinite(q[3])}var Quaternion=function(_MathArray){function Quaternion(){var x=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,y=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,z=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,w=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1;_classCallCheck(this,Quaternion);var _this=_possibleConstructorReturn(this,(Quaternion.__proto__||Object.getPrototypeOf(Quaternion)).call(this));return Array.isArray(x)&&1===arguments.length?_this.copy(x):_this.set(x,y,z,w),_this}return _inherits(Quaternion,_MathArray),_createClass(Quaternion,[{key:'fromMatrix3',value:function fromMatrix3(m){return quat_fromMat3(this,m),this.check(),this}},{key:'fromValues',value:function fromValues(x,y,z,w){return this.set(x,y,z,w)}},{key:'identity',value:function identity(){return quat_identity(this),this.check(),this}},{key:'length',value:function length(){return quat_length(this)}},{key:'squaredLength',value:function squaredLength(){return quat_squaredLength(this)}},{key:'dot',value:function dot(a,b){if(void 0!==b)throw new Error('Quaternion.dot only takes one argument');return quat_dot(this,a)}},{key:'rotationTo',value:function rotationTo(vectorA,vectorB){return quat_rotationTo(this,vectorA,vectorB),this.check(),this}},{key:'add',value:function add(a,b){if(void 0!==b)throw new Error('Quaternion.add only takes one argument');return quat_add(this,a),this.check(),this}},{key:'calculateW',value:function calculateW(){return quat_calculateW(this,this),this.check(),this}},{key:'conjugate',value:function conjugate(){return quat_conjugate(this,this),this.check(),this}},{key:'invert',value:function invert(){return quat_invert(this,this),this.check(),this}},{key:'lerp',value:function lerp(a,b,t){return quat_lerp(this,a,b,t),this.check(),this}},{key:'multiply',value:function multiply(a,b){if(void 0!==b)throw new Error('Quaternion.multiply only takes one argument');return quat_multiply(this,this,b),this.check(),this}},{key:'normalize',value:function normalize(){return quat_normalize(this,this),this.check(),this}},{key:'rotateX',value:function rotateX(rad){return quat_rotateX(this,this,rad),this.check(),this}},{key:'rotateY',value:function rotateY(rad){return quat_rotateY(this,this,rad),this.check(),this}},{key:'rotateZ',value:function rotateZ(rad){return quat_rotateZ(this,this,rad),this.check(),this}},{key:'scale',value:function scale(b){return quat_scale(this,this,b),this.check(),this}},{key:'set',value:function set(i,j,k,l){return quat_set(this,i,j,k,l),this.check(),this}},{key:'setAxisAngle',value:function setAxisAngle(axis,rad){return quat_setAxisAngle(this,axis,rad),this.check(),this}},{key:'slerp',value:function slerp(_ref){var _ref$start=_ref.start,start=void 0===_ref$start?IDENTITY_QUATERNION:_ref$start,target=_ref.target,ratio=_ref.ratio;return quat_slerp(this,start,target,ratio),this.check(),this}},{key:'ELEMENTS',get:function get(){return 4}},{key:'x',get:function get(){return this[0]},set:function set(value){return this[0]=checkNumber(value)}},{key:'y',get:function get(){return this[1]},set:function set(value){return this[1]=checkNumber(value)}},{key:'z',get:function get(){return this[2]},set:function set(value){return this[2]=checkNumber(value)}},{key:'w',get:function get(){return this[3]},set:function set(value){return this[3]=checkNumber(value)}}]),Quaternion}(MathArray);export default Quaternion;
//# sourceMappingURL=quaternion.js.map