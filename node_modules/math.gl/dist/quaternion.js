'use strict';var _createClass=function(){function defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,'value'in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();Object.defineProperty(exports,'__esModule',{value:!0});exports.validateQuaternion=validateQuaternion;var _mathArray=require('./math-array'),_mathArray2=_interopRequireDefault(_mathArray),_common=require('./common'),_fromMat=require('gl-quat/fromMat3'),_fromMat2=_interopRequireDefault(_fromMat),_identity=require('gl-quat/identity'),_identity2=_interopRequireDefault(_identity),_length=require('gl-quat/length'),_length2=_interopRequireDefault(_length),_squaredLength=require('gl-quat/squaredLength'),_squaredLength2=_interopRequireDefault(_squaredLength),_dot=require('gl-quat/dot'),_dot2=_interopRequireDefault(_dot),_rotationTo=require('gl-quat/rotationTo'),_rotationTo2=_interopRequireDefault(_rotationTo),_add=require('gl-quat/add'),_add2=_interopRequireDefault(_add),_calculateW=require('gl-quat/calculateW'),_calculateW2=_interopRequireDefault(_calculateW),_conjugate=require('gl-quat/conjugate'),_conjugate2=_interopRequireDefault(_conjugate),_invert=require('gl-quat/invert'),_invert2=_interopRequireDefault(_invert),_lerp=require('gl-quat/lerp'),_lerp2=_interopRequireDefault(_lerp),_multiply=require('gl-quat/multiply'),_multiply2=_interopRequireDefault(_multiply),_normalize=require('gl-quat/normalize'),_normalize2=_interopRequireDefault(_normalize),_rotateX=require('gl-quat/rotateX'),_rotateX2=_interopRequireDefault(_rotateX),_rotateY=require('gl-quat/rotateY'),_rotateY2=_interopRequireDefault(_rotateY),_rotateZ=require('gl-quat/rotateZ'),_rotateZ2=_interopRequireDefault(_rotateZ),_scale=require('gl-quat/scale'),_scale2=_interopRequireDefault(_scale),_set=require('gl-quat/set'),_set2=_interopRequireDefault(_set),_setAxisAngle=require('gl-quat/setAxisAngle'),_setAxisAngle2=_interopRequireDefault(_setAxisAngle),_slerp=require('gl-quat/slerp'),_slerp2=_interopRequireDefault(_slerp);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError('Cannot call a class as a function')}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return call&&('object'==typeof call||'function'==typeof call)?call:self}function _inherits(subClass,superClass){if('function'!=typeof superClass&&null!==superClass)throw new TypeError('Super expression must either be null or a function, not '+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}var IDENTITY_QUATERNION=[0,0,0,1];function validateQuaternion(q){var _NumberisFinite=Number.isFinite;return 4===q.length&&_NumberisFinite(q[0])&&_NumberisFinite(q[1])&&_NumberisFinite(q[2])&&_NumberisFinite(q[3])}var Quaternion=function(_MathArray){function Quaternion(){var x=0<arguments.length&&void 0!==arguments[0]?arguments[0]:0,y=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,z=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,w=3<arguments.length&&void 0!==arguments[3]?arguments[3]:1;_classCallCheck(this,Quaternion);var _this=_possibleConstructorReturn(this,(Quaternion.__proto__||Object.getPrototypeOf(Quaternion)).call(this));return Array.isArray(x)&&1===arguments.length?_this.copy(x):_this.set(x,y,z,w),_this}return _inherits(Quaternion,_MathArray),_createClass(Quaternion,[{key:'fromMatrix3',value:function fromMatrix3(m){return(0,_fromMat2.default)(this,m),this.check(),this}},{key:'fromValues',value:function fromValues(x,y,z,w){return this.set(x,y,z,w)}},{key:'identity',value:function identity(){return(0,_identity2.default)(this),this.check(),this}},{key:'length',value:function length(){return(0,_length2.default)(this)}},{key:'squaredLength',value:function squaredLength(){return(0,_squaredLength2.default)(this)}},{key:'dot',value:function dot(a,b){if(void 0!==b)throw new Error('Quaternion.dot only takes one argument');return(0,_dot2.default)(this,a)}},{key:'rotationTo',value:function rotationTo(vectorA,vectorB){return(0,_rotationTo2.default)(this,vectorA,vectorB),this.check(),this}},{key:'add',value:function add(a,b){if(void 0!==b)throw new Error('Quaternion.add only takes one argument');return(0,_add2.default)(this,a),this.check(),this}},{key:'calculateW',value:function calculateW(){return(0,_calculateW2.default)(this,this),this.check(),this}},{key:'conjugate',value:function conjugate(){return(0,_conjugate2.default)(this,this),this.check(),this}},{key:'invert',value:function invert(){return(0,_invert2.default)(this,this),this.check(),this}},{key:'lerp',value:function lerp(a,b,t){return(0,_lerp2.default)(this,a,b,t),this.check(),this}},{key:'multiply',value:function multiply(a,b){if(void 0!==b)throw new Error('Quaternion.multiply only takes one argument');return(0,_multiply2.default)(this,this,b),this.check(),this}},{key:'normalize',value:function normalize(){return(0,_normalize2.default)(this,this),this.check(),this}},{key:'rotateX',value:function rotateX(rad){return(0,_rotateX2.default)(this,this,rad),this.check(),this}},{key:'rotateY',value:function rotateY(rad){return(0,_rotateY2.default)(this,this,rad),this.check(),this}},{key:'rotateZ',value:function rotateZ(rad){return(0,_rotateZ2.default)(this,this,rad),this.check(),this}},{key:'scale',value:function scale(b){return(0,_scale2.default)(this,this,b),this.check(),this}},{key:'set',value:function set(i,j,k,l){return(0,_set2.default)(this,i,j,k,l),this.check(),this}},{key:'setAxisAngle',value:function setAxisAngle(axis,rad){return(0,_setAxisAngle2.default)(this,axis,rad),this.check(),this}},{key:'slerp',value:function slerp(_ref){var _ref$start=_ref.start,start=void 0===_ref$start?IDENTITY_QUATERNION:_ref$start,target=_ref.target,ratio=_ref.ratio;return(0,_slerp2.default)(this,start,target,ratio),this.check(),this}},{key:'ELEMENTS',get:function get(){return 4}},{key:'x',get:function get(){return this[0]},set:function set(value){return this[0]=(0,_common.checkNumber)(value)}},{key:'y',get:function get(){return this[1]},set:function set(value){return this[1]=(0,_common.checkNumber)(value)}},{key:'z',get:function get(){return this[2]},set:function set(value){return this[2]=(0,_common.checkNumber)(value)}},{key:'w',get:function get(){return this[3]},set:function set(value){return this[3]=(0,_common.checkNumber)(value)}}]),Quaternion}(_mathArray2.default);exports.default=Quaternion;
//# sourceMappingURL=quaternion.js.map