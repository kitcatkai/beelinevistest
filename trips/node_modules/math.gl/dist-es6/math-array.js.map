{"version":3,"sources":["../src/math-array.js"],"names":["config","formatValue","equals","MathArray","Subclass","constructor","clone","copy","check","array","i","ELEMENTS","args","offset","formatString","opts","string","printTypes","name","Float32Array","length","vector","coeff","coord","valid","Number","isFinite","debug","validate","Error","Array"],"mappings":"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","file":"math-array.js","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {config, formatValue, equals} from './common';\n\nexport default class MathArray extends Array {\n\n  clone() {\n    const Subclass = this.constructor;\n    const clone = new Subclass().copy(this);\n    clone.check();\n    return clone;\n  }\n\n  copy(array) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i];\n    }\n    return this.check();\n  }\n\n  set(...args) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = args[i] || 0;\n    }\n    return this.check();\n  }\n\n  fromArray(array, offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i + offset];\n    }\n    return this.check();\n  }\n\n  toString() {\n    return this.formatString(config);\n  }\n\n  formatString(opts) {\n    let string = '';\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n    }\n    return `${opts.printTypes ? this.constructor.name : ''}[${string}]`;\n  }\n\n  toArray(array = [], offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      array[offset + i] = this[i];\n    }\n    return array;\n  }\n\n  toFloat32Array() {\n    return new Float32Array(this);\n  }\n\n  equals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (!equals(this[i], array[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  exactEquals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (this[i] !== array[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Modifiers\n\n  negate() {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = -this[i];\n    }\n    return this.check();\n  }\n\n  inverse() {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = 1 / this[i];\n    }\n    return this.check();\n  }\n\n  lerp(vector, coeff) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const coord = this[i];\n      this[i] = coord + coeff * (vector[0] - coord);\n    }\n    return this.check();\n  }\n\n  // Debug checks\n\n  validate(array = this) {\n    let valid = array && array.length === this.ELEMENTS;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      valid = valid && Number.isFinite(array[i]);\n    }\n    return valid;\n  }\n\n  check(array = this) {\n    if (config.debug && !this.validate(array)) {\n      throw new Error(`Invalid ${this.constructor.name}`);\n    }\n    return this;\n  }\n}\n"]}