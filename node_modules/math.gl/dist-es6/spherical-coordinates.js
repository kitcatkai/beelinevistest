var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err}finally{try{!_n&&_i['return']&&_i['return']()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr))return arr;if(Symbol.iterator in Object(arr))return sliceIterator(arr,i);throw new TypeError('Invalid attempt to destructure non-iterable instance')}}(),_createClass=function(){function defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,'value'in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError('Cannot call a class as a function')}import{formatValue,equals as _equals,config}from'./common';import{degrees,radians,clamp}from'./common';import Vector3 from'./vector3';import vec3_length from'gl-vec3/length';import assert from'./lib/assert';var EPSILON=1e-6,EARTH_RADIUS_METERS=6371e3,SphericalCoordinates=function(){function SphericalCoordinates(){var _ref=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},phi=_ref.phi,theta=_ref.theta,radius=_ref.radius,bearing=_ref.bearing,pitch=_ref.pitch,altitude=_ref.altitude,_ref$radiusScale=_ref.radiusScale,radiusScale=void 0===_ref$radiusScale?EARTH_RADIUS_METERS:_ref$radiusScale;_classCallCheck(this,SphericalCoordinates),0===arguments.length?(this.phi=0,this.theta=0,this.radius=1):_NumberisFinite(phi)||_NumberisFinite(theta)?(this.phi=phi||0,this.theta=theta||0):(_NumberisFinite(bearing)||_NumberisFinite(pitch))&&(this.bearing=bearing||0,this.pitch=pitch||0),this.radius=radius||1,this.radiusScale=radiusScale||1,this.check()}var _MathPI=Math.PI,_NumberisFinite=Number.isFinite;return _createClass(SphericalCoordinates,[{key:'toString',value:function toString(){return this.formatString(config)}},{key:'formatString',value:function formatString(_ref2){var printTypes=_ref2.printTypes,printDegrees=_ref2.printDegrees,f=formatValue;return(printTypes?'Spherical':'')+'[rho:'+f(this.radius)+',theta:'+f(this.theta)+',phi:'+f(this.phi)+']'}},{key:'equals',value:function equals(other){return _equals(this.radius,other.radius)&&_equals(this.theta,other.theta)&&_equals(this.phi,other.phi)}},{key:'exactEquals',value:function exactEquals(other){return this.radius===other.radius&&this.theta===other.theta&&this.phi===other.phi}},{key:'set',value:function set(radius,phi,theta){return this.radius=radius,this.phi=phi,this.theta=theta,this.check()}},{key:'clone',value:function clone(){return new this.constructor().copy(this)}},{key:'copy',value:function copy(other){return this.radius=other.radius,this.phi=other.phi,this.theta=other.theta,this.check()}},{key:'fromLngLatZ',value:function fromLngLatZ(_ref3){var _ref4=_slicedToArray(_ref3,3),lng=_ref4[0],lat=_ref4[1],z=_ref4[2];this.radius=1+z/this.radiusScale,this.phi=radians(lat),this.theta=radians(lng)}},{key:'fromVector3',value:function fromVector3(v){return this.radius=vec3_length(v),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(v[0],v[1]),this.phi=Math.acos(clamp(v[2]/this.radius,-1,1))),this.check()}},{key:'toVector3',value:function toVector3(){return new Vector3(0,0,this.radius).rotateX({radians:this.theta}).rotateZ({radians:this.phi})}},{key:'makeSafe',value:function makeSafe(){this.phi=Math.max(EPSILON,Math.min(_MathPI-EPSILON,this.phi))}},{key:'check',value:function check(){return assert(_NumberisFinite(this.phi)&&_NumberisFinite(this.theta)&&0<this.radius),this}},{key:'bearing',get:function get(){return 180-degrees(this.phi)},set:function set(v){this.phi=_MathPI-radians(v)}},{key:'pitch',get:function get(){return degrees(this.theta)},set:function set(v){this.theta=radians(v)}},{key:'longitude',get:function get(){return degrees(this.phi)}},{key:'latitude',get:function get(){return degrees(this.theta)}},{key:'lng',get:function get(){return degrees(this.phi)}},{key:'lat',get:function get(){return degrees(this.theta)}},{key:'z',get:function get(){return(this.radius-1)*this.radiusScale}}]),SphericalCoordinates}();export default SphericalCoordinates;
//# sourceMappingURL=spherical-coordinates.js.map