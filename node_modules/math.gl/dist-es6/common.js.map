{"version":3,"sources":["../src/common.js"],"names":["config","EPSILON","debug","precision","printTypes","printDegrees","printRowMajor","configure","options","epsilon","checkNumber","value","Number","isFinite","Error","round","Math","formatValue","parseFloat","toPrecision","formatAngle","printAngles","degrees","isArray","Array","ArrayBuffer","isView","length","clone","array","map","func","result","i","radians","PI","sin","angle","cos","tan","asin","acos","atan","clamp","min","max","equals","a","b","abs"],"mappings":"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","file":"common.js","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable no-shadow */\n// TODO - remove\nconst config = {};\nconfig.EPSILON = 1e-12;\nconfig.debug = true;\nconfig.precision = 4;\nconfig.printTypes = false;\nconfig.printDegrees = false;\nconfig.printRowMajor = true;\n\nexport {config};\n\nexport function configure(options) {\n  if ('epsilon' in options) {\n    config.EPSILON = options.epsilon;\n  }\n\n  if ('debug' in options) {\n    config.debug = options.debug;\n  }\n}\n\nexport function checkNumber(value) {\n  if (!Number.isFinite(value)) {\n    throw new Error(`Invalid number ${value}`);\n  }\n  return value;\n}\n\nfunction round(value) {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\nexport function formatValue(value, {\n  precision = config.precision || 4\n} = {}) {\n  value = round(value);\n  return parseFloat(value.toPrecision(precision));\n}\n\nexport function formatAngle(value, {\n  precision = config.precision || 4,\n  printDegrees = config.printAngles\n} = {}) {\n  value = printDegrees ? degrees(value) : value;\n  value = round(value);\n  return `${parseFloat(value.toPrecision(precision))}${printDegrees ? 'Â°' : ''}`;\n}\n\n// Returns true if value is either an array or a typed array\n// Note: does not return true for ArrayBuffers and DataViews\nexport function isArray(value) {\n  return Array.isArray(value) || (ArrayBuffer.isView(value) && value.length !== undefined);\n}\n\n// If the array has a clone function, calls it, otherwise returns a copy\nexport function clone(array) {\n  return array.clone ? array.clone() : new Array(array);\n}\n\n// If the argument value is an array, applies the func element wise,\n// otherwise applies func to the argument value\nfunction map(value, func) {\n  if (isArray(value)) {\n    const result = clone(value);\n    for (let i = 0; i < result.length; ++i) {\n      result[i] = func(result[i], i, result);\n    }\n    return result;\n  }\n  return func(value);\n}\n\n//\n// GLSL math function equivalents\n// Works on both single values and vectors\n//\n\nexport function radians(degrees) {\n  return map(degrees, degrees => degrees / 180 * Math.PI);\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function degrees(radians) {\n  return map(radians, radians => radians * 180 / Math.PI);\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function sin(radians) {\n  return map(radians, angle => Math.sin(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function cos(radians) {\n  return map(radians, angle => Math.cos(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function tan(radians) {\n  return map(radians, angle => Math.tan(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function asin(radians) {\n  return map(radians, angle => Math.asin(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function acos(radians) {\n  return map(radians, angle => Math.acos(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function atan(radians) {\n  return map(radians, angle => Math.atan(angle));\n}\n\nexport function clamp(value, min, max) {\n  return map(value, value => Math.max(min, Math.min(max, value)));\n}\n\nexport function equals(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a === b) {\n      return true;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n      if (!equals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return Math.abs(a - b) <= config.EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n"]}