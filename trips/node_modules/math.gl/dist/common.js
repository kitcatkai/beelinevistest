'use strict';Object.defineProperty(exports,'__esModule',{value:!0}),exports.configure=configure,exports.checkNumber=checkNumber,exports.formatValue=formatValue,exports.formatAngle=formatAngle,exports.isArray=isArray,exports.clone=clone,exports.radians=radians,exports.degrees=degrees,exports.sin=sin,exports.cos=cos,exports.tan=tan,exports.asin=asin,exports.acos=acos,exports.atan=atan,exports.clamp=clamp,exports.equals=equals;var config={};config.EPSILON=1e-12,config.debug=!0,config.precision=4,config.printTypes=!1,config.printDegrees=!1,config.printRowMajor=!0,exports.config=config;function configure(options){'epsilon'in options&&(config.EPSILON=options.epsilon),'debug'in options&&(config.debug=options.debug)}function checkNumber(value){if(!Number.isFinite(value))throw new Error('Invalid number '+value);return value}function round(value){return Math.round(value/config.EPSILON)*config.EPSILON}function formatValue(value){var _ref=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},_ref$precision=_ref.precision,precision=void 0===_ref$precision?config.precision||4:_ref$precision;return value=round(value),parseFloat(value.toPrecision(precision))}function formatAngle(value){var _ref2=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},_ref2$precision=_ref2.precision,precision=void 0===_ref2$precision?config.precision||4:_ref2$precision,_ref2$printDegrees=_ref2.printDegrees,printDegrees=void 0===_ref2$printDegrees?config.printAngles:_ref2$printDegrees;return value=printDegrees?degrees(value):value,value=round(value),''+parseFloat(value.toPrecision(precision))+(printDegrees?'\xB0':'')}function isArray(value){return Array.isArray(value)||ArrayBuffer.isView(value)&&value.length!==void 0}function clone(array){return array.clone?array.clone():Array(array)}function map(value,func){if(isArray(value)){for(var result=clone(value),i=0;i<result.length;++i)result[i]=func(result[i],i,result);return result}return func(value)}function radians(degrees){return map(degrees,function(degrees){return degrees/180*Math.PI})}function degrees(radians){return map(radians,function(radians){return 180*radians/Math.PI})}function sin(radians){return map(radians,function(angle){return Math.sin(angle)})}function cos(radians){return map(radians,function(angle){return Math.cos(angle)})}function tan(radians){return map(radians,function(angle){return Math.tan(angle)})}function asin(radians){return map(radians,function(angle){return Math.asin(angle)})}function acos(radians){return map(radians,function(angle){return Math.acos(angle)})}function atan(radians){return map(radians,function(angle){return Math.atan(angle)})}function clamp(value,min,max){return map(value,function(value){return Math.max(min,Math.min(max,value))})}function equals(a,b){var _Mathabs=Math.abs;if(Array.isArray(a)&&Array.isArray(b)){if(a===b)return!0;if(a.length!==b.length)return!1;for(var i=0;i<a.length;++i)if(!equals(a[i],b[i]))return!1;return!0}return _Mathabs(a-b)<=config.EPSILON*Math.max(1,_Mathabs(a),_Mathabs(b))}
//# sourceMappingURL=common.js.map